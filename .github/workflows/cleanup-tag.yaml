name: Cleanup Old Tags and Release Branches

on:
  schedule:
    - cron: '0 0 * * 0' # Runs weekly on Sunday at midnight
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.MY_GITHUB_TOKEN }}

    - name: Get all tags
      id: get_tags
      run: |
        git fetch --tags
        tags=$(git tag --sort=-creatordate)
        echo "::set-output name=tags::$tags"

    # - name: Find branch containing the tag and delete it
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    #   run: |
    #     git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
    #     tags_array=(${{ steps.get_tags.outputs.tags }})
    #     keep_count=0
    #     if [ ${#tags_array[@]} -gt $keep_count ]; then
    #       for tag in "${tags_array[@]:$keep_count}"; do
    #         echo "Deleting tag: $tag"
    #         git push --delete origin $tag
            
    #         commit=$(git rev-list -n 1 $tag)
    #         branch=$(git branch -r --contains $commit | grep 'origin/release-' | sed 's|origin/||')
    #         if [ ! -z "$branch" ]; then
    #           echo "Deleting branch: $branch"
    #           git push --delete origin $branch
    #         fi
    #       done
    #     else
    #       echo "No tags to delete"
    #     fi


    - name: Delete old tags and branches
      run: |
        tags_array=(${{ steps.get_tags.outputs.tags }})
        keep_count=0
        if [ ${#tags_array[@]} -gt $keep_count ]; then
          for tag in "${tags_array[@]:$keep_count}"; do
            echo "Deleting tag: $tag"
            git push --delete origin $tag

            echo "Release branches containing the tag $tag:"
            commit=$(git rev-list -n 1 $tag)
            release_branches=$(git branch -r --contains $commit | grep 'origin/Release ' | sed 's|origin/||')

            if [ -n "$release_branches" ]; then
              echo "$release_branches"
            else
              echo "No release branches found containing the tag $tag"
            fi
            
            branch="Release ${tag}"
            if git show-ref --verify --quiet refs/heads/"$branch"; then
              echo "Deleting branch: $branch"
              git push --delete origin "$branch"
            fi
          done
        else
          echo "No tags to delete"
        fi
