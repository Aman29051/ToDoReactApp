name: Cleanup Old Branches

on:
  schedule:
    - cron: '0 0 * * 0' # Runs weekly on Sunday at midnight
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.MY_GITHUB_TOKEN }}

    # - name: Get all tags
    #   id: get_tags
    #   run: |
    #     git fetch --tags
    #     tags=$(git tag --sort=-creatordate)
    #     echo "::set-output name=tags::${tags//$'\n'/,}"
    #     # echo "tags=$(echo \"$tags\" | jq -R '. | @uri')" >> $GITHUB_OUTPUT

    - name: Get all tags
      id: get_tags
      run: |
        git fetch --tags
        tags=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags)
        echo "tags=${tags}" >> $GITHUB_OUTPUT
    
    - name: Sort tags
      run: |
        IFS=' ' read -r -a tags_array <<< "${tags}"
        tags_array=($(printf "%s\n" "${tags_array[@]}" | sort -V))
        echo "sorted_tags=${tags_array[*]}" >> $GITHUB_OUTPUT
       

    - name: Delete old branches
      run: |
        IFS=',' read -r -a tags_array <<< "${{ steps.get_tags.outputs.tags }}"
        echo "${tags_array[@]}"
        keep_count=5
        if [ ${#tags_array[@]} -gt $keep_count ]; then
          for tag in "${tags_array[@]:$keep_count}"; do
            branch="release/$tag"
            echo "Branch:$branch"
            if git show-ref --quiet refs/heads/$branch; then
              echo "Deleting branch: $branch"
              git push --delete origin $branch
            else
              echo "Branch $branch does not exist."
            fi
          done
        else
          echo "No branches to delete"
        fi
